/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ptcSistemaEscola;

import ptcSistemaEscola.Conexao;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static ptcSistemaEscola.Conexao.con;

/**
 *
 * @author samue
 */
public class tDisciplina extends javax.swing.JFrame {
DefaultTableModel model;
    /**
     * Creates new form tDisciplina
     */
    public tDisciplina() {
        initComponents();
        Conexao.Conectar(); 
        jTable1.getColumnModel().getColumn(0).setMaxWidth(120); 
        jTable1.getColumnModel().getColumn(1).setMaxWidth(260);
        jTable1.getColumnModel().getColumn(2).setMaxWidth(420); 
        jTable1.getColumnModel().getColumn(3).setMaxWidth(210);
        jTable1.getColumnModel().getColumn(4).setMaxWidth(420);
        model =  (DefaultTableModel) jTable1.getModel(); 
        jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);
        CarregarCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSair = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbxProfessor1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        btnConsultar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnGravar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbxDisciplina = new javax.swing.JComboBox<>();
        cbxProfessor2 = new javax.swing.JComboBox<>();
        tfCodigo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnIncluir = new javax.swing.JButton();
        tfNome = new javax.swing.JTextField();
        tfCargaHora = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        lblDisciplinaID = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Cadastro da Disciplina");
        setResizable(false);

        btnSair.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setText("Cadastro da Disciplina");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Código:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Nome da Disciplina:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Professor/a:");

        cbxProfessor1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbxProfessor1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecionar" }));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Consultar, Alterar e Excluir \n", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 16))); // NOI18N

        btnConsultar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        btnAlterar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.setEnabled(false);
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnGravar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnGravar.setText("Gravar");
        btnGravar.setEnabled(false);
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });

        btnExcluir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setEnabled(false);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Disciplina:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Professor/a:");

        cbxDisciplina.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbxDisciplina.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecionar" }));

        cbxProfessor2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbxProfessor2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecionar" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(btnConsultar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxProfessor2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxDisciplina, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbxDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbxProfessor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(btnConsultar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGravar)
                    .addComponent(btnAlterar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluir)
                .addContainerGap())
        );

        tfCodigo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Código", "Nome", "Carga_Horária", "Professor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(240);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(320);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(160);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(340);
        }

        btnIncluir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnIncluir.setText("Incluir");
        btnIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirActionPerformed(evt);
            }
        });

        tfNome.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        tfCargaHora.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Carga Horária:");

        lblDisciplinaID.setFont(new java.awt.Font("Tahoma", 0, 3)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1040, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel2))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel3))
                                        .addGap(39, 39, 39)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(tfCargaHora, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cbxProfessor1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(lblDisciplinaID, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel4)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(tfCargaHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cbxProfessor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblDisciplinaID, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSair)
                            .addComponent(btnIncluir))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CarregarCombo() {
        String sql;
        try
        {
            cbxProfessor1.removeAllItems();
            cbxProfessor2.removeAllItems();
            cbxDisciplina.removeAllItems();
            cbxProfessor1.addItem("Selecione...");
            cbxProfessor2.addItem("Selecione...");
            cbxDisciplina.addItem("Selecione...");
            
            sql = "select Nome from Professor order by Nome asc ";
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            while(rs.next())
            {
                cbxProfessor1.addItem(rs.getString("Nome"));
                cbxProfessor2.addItem(rs.getString("Nome"));
            }
            
            sql = "select Nome from Disciplina order by Nome ASC";
            stm = con.createStatement();
            rs = stm.executeQuery(sql);
            while(rs.next())
            {
                cbxDisciplina.addItem(rs.getString("Nome"));
            }  
                     
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Erro ao incluir os combos. "+e,"ERRO: ",JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        try{
            Conexao.con.close();
        }
        catch (Exception e){
            System.out.println(e);
        }
        tMenu menu = new tMenu();
        this.dispose();
        menu.setVisible(true);
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirActionPerformed
        try
        {
            String sql;
            String codigo = "",nome = "", cargaHoraria  = "",professor="", limpacbx = "Selecione...";
            
            codigo = tfCodigo.getText();
            nome = tfNome.getText();
            cargaHoraria = tfCargaHora.getText();
            sql = "select ProfessorID from Professor where Nome = '" + cbxProfessor1.getSelectedItem() + "'";
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            while(rs.next())
            {
                professor = rs.getString("ProfessorID");
            }
            
            
            if(codigo.equals("") || nome.equals("") || cargaHoraria.equals("") || professor.equals(""))
            {
                JOptionPane.showMessageDialog(null, "Por Favor, preencha os dados corretamente!","ERRO",JOptionPane.INFORMATION_MESSAGE);
            }
            else
            {
                sql="INSERT INTO Disciplina (Codigo,Nome,Carga_Horaria,ProfessorID) values " +
                "('" + codigo + "','" + nome + "'," + cargaHoraria + "," + professor + ")";

                stm = con.prepareStatement(sql);
                stm.execute(sql);
                tfCodigo.setText("");
                tfNome.setText("");
                tfCargaHora.setText("");
                cbxProfessor1.setSelectedItem(limpacbx);
                CarregarCombo();
                tfCodigo.requestFocus();
                model.setRowCount(0);
                JOptionPane.showMessageDialog( null, "Inclusão realizada com Sucesso! ","Sucesso",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Erro ao incluir, tente novamente "+e,"ERRO: ",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnIncluirActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        String sql;
        String nomeDisciplina="",nomeProfessor = "", DisciplinaID="", ProfessorID="";
        String limpacbx = "Selecione..."; 
        model.setRowCount(0);
        nomeDisciplina = cbxDisciplina.getSelectedItem().toString();
        nomeProfessor = cbxProfessor2.getSelectedItem().toString();    
        try
        {
            if(!nomeDisciplina.equals("Selecione..."))
            {
                sql = "select DisciplinaID from Disciplina where Nome = '" + nomeDisciplina + "'";
                Statement stm = con.createStatement();
                ResultSet rs = stm.executeQuery(sql);
                while(rs.next())
                {
                    DisciplinaID = rs.getString("DisciplinaID");
                }
            }
            if(!nomeProfessor.equals("Selecione..."))
            {
                sql = "select ProfessorID from Professor where Nome = '" + nomeProfessor + "'";
                Statement stm = con.createStatement();
                ResultSet rs = stm.executeQuery(sql);
                while(rs.next())
                {
                    ProfessorID = rs.getString("ProfessorID");
                }
            }
            
                        
            sql = "SELECT tabelaDisciplina.*,tabelaProfessor.ProfessorID,tabelaProfessor.Nome as NomeProfessor  "
            + "from Professor tabelaProfessor inner join Disciplina tabelaDisciplina ON tabelaDisciplina.ProfessorID = tabelaProfessor.ProfessorID "
            + " Where 1 = 1 ";

            if(!nomeDisciplina.equals("Selecione..."))
            {
                sql = sql + " AND tabelaDisciplina.DisciplinaID = " + DisciplinaID;
            }
          
            if(!nomeProfessor.equals("Selecione..."))
            {
                sql = sql + " AND tabelaProfessor.ProfessorID  = " + ProfessorID;
            }
            sql = sql + " order by tabelaDisciplina.Nome";
            
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            rs.first();
            rs.getRow();
            if(rs.getRow() > 0){
                String[] linha = new String[]{rs.getString("DisciplinaID"),rs.getString("Codigo"),rs.getString("Nome"),rs.getString("Carga_Horaria"),
                rs.getString("NomeProfessor")};
                model.addRow(linha);
                while(rs.next())
                {
                    linha = new String[]{rs.getString("DisciplinaID"),rs.getString("Codigo"),rs.getString("Nome"),rs.getString("Carga_Horaria"),
                    rs.getString("NomeProfessor")};
                    model.addRow(linha);
                }
                btnAlterar.setEnabled(true);
                btnExcluir.setEnabled(true);
                cbxDisciplina.setSelectedItem(limpacbx);
                cbxProfessor2.setSelectedItem(limpacbx);
            }
            else
            {
                JOptionPane.showMessageDialog( null, "Não existe nenhuma Disciplina com essas características","Erro",JOptionPane.INFORMATION_MESSAGE);
                cbxDisciplina.setSelectedItem(limpacbx);
                cbxProfessor2.setSelectedItem(limpacbx);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Erro ao consultar, tente novamente "+e,"ERRO:",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        String professor;
        int linha = jTable1.getSelectedRow();
        if (linha==-1)
        {
            JOptionPane.showMessageDialog(null,"Você deve selecionar uma linha.");
        }
        else{
            lblDisciplinaID.setText((String) jTable1.getValueAt(linha, 0));
            tfCodigo.setText((String) jTable1.getValueAt(linha, 1));
            tfNome.setText((String) jTable1.getValueAt(linha, 2));
            tfCargaHora.setText((String) jTable1.getValueAt(linha, 3));
            professor = ((String) jTable1.getValueAt(linha, 4));
            cbxProfessor1.setSelectedItem(professor);
            tfCodigo.requestFocus();
            btnGravar.setEnabled(true);
            btnIncluir.setEnabled(false);
            btnConsultar.setEnabled(false);
            btnExcluir.setEnabled(false);
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
        try
        {
            String sql;
            String codigo = "",nome = "", cargaHoraria  = "",professor="", limpacbx = "Selecione...";
            
            codigo = tfCodigo.getText();
            nome = tfNome.getText();
            cargaHoraria = tfCargaHora.getText();
            sql = "select ProfessorID from Professor where Nome = '" + cbxProfessor1.getSelectedItem() + "'";
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            while(rs.next())
            {
                professor = rs.getString("ProfessorID");
            }
            
            
            if(codigo.equals("") || nome.equals("") || cargaHoraria.equals("") || professor.equals(""))
            {
                JOptionPane.showMessageDialog(null, "Por Favor, preencha os dados corretamente!","ERRO",JOptionPane.INFORMATION_MESSAGE);
            }
            else
            {
                sql="UPDATE Disciplina set Codigo = '" +codigo +"',Nome = '"+nome+"',Carga_Horaria = "+cargaHoraria+""
                + ",ProfessorID = "+professor+" where DisciplinaID = "+lblDisciplinaID.getText(); 
                
                stm = con.prepareStatement(sql);
                stm.execute(sql);
                tfCodigo.setText("");
                tfNome.setText("");
                tfCargaHora.setText("");
                cbxProfessor1.setSelectedItem(limpacbx);
                CarregarCombo();
                tfCodigo.requestFocus();
                model.setRowCount(0);
                btnIncluir.setEnabled(true);
                btnConsultar.setEnabled(true);
                btnAlterar.setEnabled(false);
                btnGravar.setEnabled(false);
                JOptionPane.showMessageDialog( null, "Alteração realizada com Sucesso! ","Sucesso",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Erro ao alterar, tente novamente "+e,"ERRO: ",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnGravarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int linha = jTable1.getSelectedRow();
        if (linha==-1)
        {
            JOptionPane.showMessageDialog(null,"Você deve selecionar uma linha.");
        }
        else
        {
            int opcao = JOptionPane.showConfirmDialog(null,"Confirma exclusão","Excluindo...", JOptionPane.YES_NO_OPTION);
            String sql, codigo;
            codigo = (String) jTable1.getValueAt(linha, 0);
            if (opcao==0)
            {
                try
                {
                    sql="delete from Disciplina where DisciplinaID= " + codigo;
                    Statement stm = con.prepareStatement(sql);
                    stm.execute(sql);
                    btnIncluir.setEnabled(true);
                    btnConsultar.setEnabled(true);
                    btnAlterar.setEnabled(false);
                    btnExcluir.setEnabled(false);
                    tfCodigo.requestFocus();
                    CarregarCombo();
                    JOptionPane.showMessageDialog(null, "Exclusão feita com Sucesso! ","Sucesso", JOptionPane.INFORMATION_MESSAGE);
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(null, "Erro ao excluir, tente novamente " +e,"ERRO: ",JOptionPane.INFORMATION_MESSAGE);
                }
            }
            else
            {
                tfCodigo.requestFocus();
                btnAlterar.setEnabled(false);
                btnExcluir.setEnabled(false);
            }
            model.setRowCount(0);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tDisciplina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tDisciplina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tDisciplina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tDisciplina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tDisciplina().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnGravar;
    private javax.swing.JButton btnIncluir;
    private javax.swing.JButton btnSair;
    private javax.swing.JComboBox<String> cbxDisciplina;
    private javax.swing.JComboBox<String> cbxProfessor1;
    private javax.swing.JComboBox<String> cbxProfessor2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblDisciplinaID;
    private javax.swing.JTextField tfCargaHora;
    private javax.swing.JTextField tfCodigo;
    private javax.swing.JTextField tfNome;
    // End of variables declaration//GEN-END:variables
}
